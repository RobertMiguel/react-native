{"ast":null,"code":"import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { Ionicons } from '@expo/vector-icons';\nimport GamesScreen from \"../screen/Games\";\nimport HomeScreen from \"../screen/Home\";\nimport AccountScreen from \"../screen/Account\";\nimport Routes from \"./stackRouter\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nexport default function StackRouter(params) {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n            var iconName;\n            if (Routes.name === 'Games') {\n              iconName = focused ? 'game-controller' : 'game-controller-outline';\n            } else if (Routes.name === 'Home') {\n              iconName = focused ? 'ios-home' : 'ios-home-outline';\n            } else if (Routes.name === 'Account') {\n              iconName = focused ? 'account-settings' : 'account-settings-outline';\n            }\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          },\n          tabBarActiveTintColor: 'black',\n          tabBarInactiveTintColor: 'white'\n        };\n      },\n      children: [_jsx(Stack.Screen, {\n        name: \"Games\",\n        component: GamesScreen\n      }), _jsx(Tab.Screen, {\n        name: \"Home\",\n        component: HomeScreen\n      }), _jsx(Tab.Screen, {\n        name: \"Account\",\n        component: AccountScreen\n      })]\n    })\n  });\n}","map":{"version":3,"names":["createBottomTabNavigator","NavigationContainer","Ionicons","GamesScreen","HomeScreen","AccountScreen","Routes","jsx","_jsx","jsxs","_jsxs","Tab","StackRouter","params","children","Navigator","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","Stack","Screen","component"],"sources":["/home/robert/Documentos/React_Native/estudos/gamerCenter/src/routes/index.js"],"sourcesContent":["import { createBottomTabNavigator } from '@react-navigation/bottom-tabs'\nimport { NavigationContainer } from '@react-navigation/native'\nimport { Ionicons } from '@expo/vector-icons'\n\nimport GamesScreen from '../screen/Games'\nimport HomeScreen from '../screen/Home'\nimport AccountScreen from '../screen/Account'\nimport Routes from './stackRouter'\n\nconst Tab = createBottomTabNavigator()\n\nexport default function StackRouter(params) {\n    return(\n        <NavigationContainer>\n            <Tab.Navigator \n                screenOptions={({ route }) => ({\n                    tabBarIcon : ({ focused, color, size }) => {\n                        let iconName\n\n                        if(Routes.name === 'Games') {\n                            iconName = focused\n                            ? 'game-controller'\n                            : 'game-controller-outline'\n                        } else if(Routes.name === 'Home') {\n                            iconName = focused\n                            ? 'ios-home'\n                            : 'ios-home-outline'\n                        } else if(Routes.name === 'Account') {\n                            iconName = focused\n                            ? 'account-settings'\n                            : 'account-settings-outline'\n                        }\n\n                        return <Ionicons name={iconName} size={size} color={color} />\n                    },\n                    tabBarActiveTintColor : 'black',\n                    tabBarInactiveTintColor: 'white'\n                })}\n            >\n                <Stack.Screen \n                    name='Games'\n                    component={ GamesScreen }\n                />\n                <Tab.Screen\n                    name='Home'\n                    component={ HomeScreen }\n                />\n                <Tab.Screen\n                    name='Account'\n                    component={ AccountScreen }\n                />\n            </Tab.Navigator>\n        </NavigationContainer>\n    )\n}"],"mappings":"AAAA,SAASA,wBAAwB,QAAQ,+BAA+B;AACxE,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,QAAQ,QAAQ,oBAAoB;AAE7C,OAAOC,WAAW;AAClB,OAAOC,UAAU;AACjB,OAAOC,aAAa;AACpB,OAAOC,MAAM;AAAqB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAElC,IAAMC,GAAG,GAAGX,wBAAwB,EAAE;AAEtC,eAAe,SAASY,WAAWA,CAACC,MAAM,EAAE;EACxC,OACIL,IAAA,CAACP,mBAAmB;IAAAa,QAAA,EAChBJ,KAAA,CAACC,GAAG,CAACI,SAAS;MACVC,aAAa,EAAE,SAAAA,cAAAC,IAAA;QAAA,IAAGC,KAAK,GAAAD,IAAA,CAALC,KAAK;QAAA,OAAQ;UAC3BC,UAAU,EAAG,SAAAA,WAAAC,KAAA,EAA8B;YAAA,IAA3BC,OAAO,GAAAD,KAAA,CAAPC,OAAO;cAAEC,KAAK,GAAAF,KAAA,CAALE,KAAK;cAAEC,IAAI,GAAAH,KAAA,CAAJG,IAAI;YAChC,IAAIC,QAAQ;YAEZ,IAAGlB,MAAM,CAACmB,IAAI,KAAK,OAAO,EAAE;cACxBD,QAAQ,GAAGH,OAAO,GAChB,iBAAiB,GACjB,yBAAyB;YAC/B,CAAC,MAAM,IAAGf,MAAM,CAACmB,IAAI,KAAK,MAAM,EAAE;cAC9BD,QAAQ,GAAGH,OAAO,GAChB,UAAU,GACV,kBAAkB;YACxB,CAAC,MAAM,IAAGf,MAAM,CAACmB,IAAI,KAAK,SAAS,EAAE;cACjCD,QAAQ,GAAGH,OAAO,GAChB,kBAAkB,GAClB,0BAA0B;YAChC;YAEA,OAAOb,IAAA,CAACN,QAAQ;cAACuB,IAAI,EAAED,QAAS;cAACD,IAAI,EAAEA,IAAK;cAACD,KAAK,EAAEA;YAAM,EAAG;UACjE,CAAC;UACDI,qBAAqB,EAAG,OAAO;UAC/BC,uBAAuB,EAAE;QAC7B,CAAC;MAAA,CAAE;MAAAb,QAAA,GAEHN,IAAA,CAACoB,KAAK,CAACC,MAAM;QACTJ,IAAI,EAAC,OAAO;QACZK,SAAS,EAAG3B;MAAa,EAC3B,EACFK,IAAA,CAACG,GAAG,CAACkB,MAAM;QACPJ,IAAI,EAAC,MAAM;QACXK,SAAS,EAAG1B;MAAY,EAC1B,EACFI,IAAA,CAACG,GAAG,CAACkB,MAAM;QACPJ,IAAI,EAAC,SAAS;QACdK,SAAS,EAAGzB;MAAe,EAC7B;IAAA;EACU,EACE;AAE9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}