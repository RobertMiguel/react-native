{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { GameList } from \"../../components/GameList\";\nimport { Ionicons } from '@expo/vector-icons';\nimport api from \"../../services/api\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _useState = useState([]),\n  _useState2 = _slicedToArray(_useState, 2),\n  games = _useState2[0],\n  setGames = _useState2[1];\nuseEffect(function () {\n  function fetchApi() {\n    return _fetchApi.apply(this, arguments);\n  }\n  function _fetchApi() {\n    _fetchApi = _asyncToGenerator(function* () {\n      var response = yield api.get('/games');\n      setGames(response.data);\n    });\n    return _fetchApi.apply(this, arguments);\n  }\n  fetchApi();\n}, []);\nexport default function GamesScreen() {\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.searchGame,\n      children: [_jsx(TextInput, {\n        placeholder: \"Pesquisar\",\n        styles: styles.input,\n        placeholderTextColor: styles.placeHolderColor.color,\n        underlineColorAndroid: \"transparent\"\n      }), _jsx(TouchableOpacity, {\n        children: _jsx(Ionicons, {\n          name: \"search\",\n          size: 28,\n          color: \"#666666\"\n        })\n      })]\n    }), _jsx(FlatList, {\n      data: games,\n      keyExtractor: function keyExtractor(item) {\n        return String(item.id);\n      },\n      renderItem: function renderItem(item) {\n        return _jsx(GameList, {\n          data: item\n        });\n      },\n      showsVerticalScrollIndicator: false\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#222831',\n    paddingTop: 36,\n    paddingStart: 14,\n    paddingEnd: 14\n  },\n  searchGame: {\n    width: '100%',\n    borderRadius: 16,\n    backgroundColor: '#3c3c3c',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginTop: 16,\n    marginBottom: 16,\n    paddingLeft: 30,\n    paddingRight: 30,\n    height: 50\n  },\n  input: {\n    width: '90%',\n    maxWidth: '90%',\n    height: 60\n  },\n  placeHolderColor: {\n    color: '#666666'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","SafeAreaView","View","Text","StyleSheet","TextInput","TouchableOpacity","FlatList","GameList","Ionicons","api","jsx","_jsx","jsxs","_jsxs","_useState","_useState2","_slicedToArray","games","setGames","fetchApi","_fetchApi","apply","arguments","_asyncToGenerator","response","get","data","GamesScreen","style","styles","container","children","searchGame","placeholder","input","placeholderTextColor","placeHolderColor","color","underlineColorAndroid","name","size","keyExtractor","item","String","id","renderItem","showsVerticalScrollIndicator","create","flex","backgroundColor","paddingTop","paddingStart","paddingEnd","width","borderRadius","flexDirection","justifyContent","alignItems","marginTop","marginBottom","paddingLeft","paddingRight","height","maxWidth"],"sources":["/home/robert/Documentos/React_Native/estudos/gamerCenter/src/screen/Games/index.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\nimport { SafeAreaView, View, Text, StyleSheet, TextInput, TouchableOpacity, FlatList} from 'react-native'\nimport { GameList } from '../../components/GameList'\nimport { Ionicons } from '@expo/vector-icons'\n\nimport api from '../../services/api'\n\nconst [games, setGames] = useState([])\n\n\nuseEffect(() => {\n    async function fetchApi() {\n        const response = await api.get('/games')\n        setGames(response.data)\n    }\n    fetchApi()\n}, [])\n\nexport default function GamesScreen() {\n\n\n    return(\n        <SafeAreaView style={styles.container}>\n            <View style={styles.searchGame}>\n                <TextInput\n                    placeholder='Pesquisar'\n                    styles={styles.input}\n                    placeholderTextColor={styles.placeHolderColor.color}\n                    underlineColorAndroid='transparent'\n                />  \n                <TouchableOpacity>\n                    <Ionicons name='search' size={28} color='#666666'/>\n                </TouchableOpacity>\n            </View>\n\n            <FlatList\n                data={games}\n                keyExtractor={ (item)=> String(item.id)}\n                renderItem={(item) => <GameList data={item}/>}\n                showsVerticalScrollIndicator={false}\n            />\n\n        </SafeAreaView>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container:{\n        flex: 1,\n        backgroundColor: '#222831',\n        paddingTop: 36,\n        paddingStart: 14,\n        paddingEnd: 14,\n    },\n    searchGame:{\n        width: '100%',\n        borderRadius: 16,\n        backgroundColor: '#3c3c3c',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginTop: 16,\n        marginBottom: 16,\n        paddingLeft: 30,\n        paddingRight: 30,\n        height: 50\n    },\n    input:{\n        width: '90%',\n        maxWidth: '90%',\n        height: 60,\n    },\n    placeHolderColor: {\n        color: '#666666'\n    }\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}